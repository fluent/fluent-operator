
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: outputs.fluentd.fluent.io
spec:
  group: fluentd.fluent.io
  names:
    kind: Output
    listKind: OutputList
    plural: outputs
    shortNames:
    - fdo
    singular: output
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Output is the Schema for the outputs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OutputSpec defines the desired state of Output
            properties:
              outputs:
                items:
                  description: Output defines all available output plugins and their
                    parameters
                  properties:
                    buffer:
                      description: buffer section
                      properties:
                        calcNumRecords:
                          description: Calculates the number of records, chunk size,
                            during chunk resume.
                          type: string
                        chunkFormat:
                          description: ChunkFormat specifies the chunk format for
                            calc_num_records.
                          enum:
                          - msgpack
                          - text
                          - auto
                          type: string
                        chunkLimitRecords:
                          description: The max number of events that each chunks can
                            store in it.
                          pattern: ^\d+(KB|MB|GB|TB)$
                          type: string
                        chunkLimitSize:
                          description: 'Buffer parameters The max size of each chunks:
                            events will be written into chunks until the size of chunks
                            become this size Default: 8MB (memory) / 256MB (file)'
                          pattern: ^\d+(KB|MB|GB|TB)$
                          type: string
                        compress:
                          description: Fluentd will decompress these compressed chunks
                            automatically before passing them to the output plugin
                            If gzip is set, Fluentd compresses data records before
                            writing to buffer chunks. Default:text.
                          enum:
                          - text
                          - gzip
                          type: string
                        delayedCommitTimeout:
                          description: The timeout (seconds) until output plugin decides
                            if the async write operation has failed. Default is 60s
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        disableChunkBackup:
                          description: Instead of storing unrecoverable chunks in
                            the backup directory, just discard them. This option is
                            new in Fluentd v1.2.6.
                          type: boolean
                        flushAtShutdown:
                          description: Flush parameters This specifies whether to
                            flush/write all buffer chunks on shutdown or not.
                          type: boolean
                        flushInterval:
                          description: FlushInterval defines the flush interval
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        flushMode:
                          description: 'FlushMode defines the flush mode: lazy: flushes/writes
                            chunks once per timekey interval: flushes/writes chunks
                            per specified time via flush_interval immediate: flushes/writes
                            chunks immediately after events are appended into chunks
                            default: equals to lazy if time is specified as chunk
                            key, interval otherwise'
                          enum:
                          - default
                          - lazy
                          - interval
                          - immediate
                          type: string
                        flushThreadCount:
                          description: The sleep interval (seconds) for threads to
                            wait for the next flush try(when no chunks are waiting)
                          pattern: ^\d+$
                          type: string
                        id:
                          description: The @id parameter specifies a unique name for
                            the configuration.
                          type: string
                        localtime:
                          description: If true, uses local time.
                          type: boolean
                        logLevel:
                          description: The @log_level parameter specifies the plugin-specific
                            logging level
                          type: string
                        overflowAction:
                          description: 'OverflowAtction defines the output plugin
                            behave when its buffer queue is full. Default: throw_exception'
                          type: string
                        path:
                          description: The path where buffer chunks are stored. This
                            field would make no effect in memory buffer plugin.
                          type: string
                        pathSuffix:
                          description: Changes the suffix of the buffer file.
                          type: string
                        queueLimitLength:
                          description: 'The queue length limitation of this buffer
                            plugin instance. Default: 0.95'
                          pattern: ^\d+.?\d+$
                          type: string
                        queuedChunksLimitSize:
                          description: 'Limit the number of queued chunks. Default:
                            1 If a smaller flush_interval is set, e.g. 1s, there are
                            lots of small queued chunks in the buffer. With file buffer,
                            it may consume a lot of fd resources when output destination
                            has a problem. This parameter mitigates such situations.'
                          minimum: 1
                          type: integer
                        retryExponentialBackoffBase:
                          description: The base number of exponential backoff for
                            retries.
                          pattern: ^\d+(\.[0-9]{0,2})?$
                          type: string
                        retryForever:
                          description: If true, plugin will ignore retry_timeout and
                            retry_max_times options and retry flushing forever.
                          type: boolean
                        retryMaxInterval:
                          description: The maximum interval (seconds) for exponential
                            backoff between retries while failing
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        retryMaxTimes:
                          description: 'The maximum number of times to retry to flush
                            the failed chunks. Default: none'
                          type: integer
                        retryRandomize:
                          description: If true, the output plugin will retry after
                            randomized interval not to do burst retries
                          type: boolean
                        retrySecondaryThreshold:
                          description: The ratio of retry_timeout to switch to use
                            the secondary while failing.
                          pattern: ^\d+.?\d+$
                          type: string
                        retryTimeout:
                          description: Retry parameters The maximum time (seconds)
                            to retry to flush again the failed chunks, until the plugin
                            discards the buffer chunks
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        retryType:
                          description: Output plugin will retry periodically with
                            fixed intervals.
                          type: string
                        retryWait:
                          description: Wait in seconds before the next retry to flush
                            or constant factor of exponential backoff
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        tag:
                          description: The output plugins group events into chunks.
                            Chunk keys, specified as the argument of <buffer> section,
                            control how to group events into chunks. If tag is empty,
                            which means blank Chunk Keys. Tag also supports Nested
                            Field, combination of Chunk Keys, placeholders, etc. See
                            https://docs.fluentd.org/configuration/buffer-section.
                          type: string
                        timeFormat:
                          description: Process value according to the specified format.
                            This is available only when time_type is *string
                          type: string
                        timeFormatFallbacks:
                          description: Uses the specified time format as a fallback
                            in the specified order. You can parse undetermined time
                            format by using time_format_fallbacks. This options is
                            enabled when time_type is mixed.
                          type: string
                        timeType:
                          description: parses/formats value according to this type,
                            default is *string
                          enum:
                          - float
                          - unixtime
                          - '*string'
                          - mixed
                          type: string
                        timekey:
                          description: Output plugin will flush chunks per specified
                            time (enabled when time is specified in chunk keys)
                          type: string
                        timekeyWait:
                          description: Output plugin will write chunks after timekey_wait
                            seconds later after timekey expiration
                          type: string
                        timezone:
                          description: Uses the specified timezone.
                          type: string
                        totalLimitSize:
                          description: 'The size limitation of this buffer plugin
                            instance Default: 512MB (memory) / 64GB (file)'
                          pattern: ^\d+(KB|MB|GB|TB)$
                          type: string
                        type:
                          description: The @type parameter specifies the type of the
                            plugin.
                          enum:
                          - file
                          - memory
                          - file_single
                          type: string
                        utc:
                          description: If true, uses UTC.
                          type: boolean
                      required:
                      - path
                      - type
                      type: object
                    elasticsearch:
                      description: out_es plugin
                      properties:
                        host:
                          description: 'The hostname of your Elasticsearch node (default:
                            localhost).'
                          type: string
                        hosts:
                          description: Hosts defines a list of hosts if you want to
                            connect to more than one Elasticsearch nodes
                          type: string
                        indexName:
                          description: IndexName defines the placeholder syntax of
                            Fluentd plugin API. See https://docs.fluentd.org/configuration/buffer-section.
                          type: string
                        logstashFormat:
                          description: 'If true, Fluentd uses the conventional index
                            name format logstash-%Y.%m.%d (default: false). This option
                            supersedes the index_name option.'
                          type: boolean
                        logstashPrefix:
                          description: 'LogstashPrefix defines the logstash prefix
                            index name to write events when logstash_format is true
                            (default: logstash).'
                          type: string
                        password:
                          description: Optional, The login credentials to connect
                            to Elasticsearch
                          properties:
                            valueFrom:
                              description: ValueSource defines how to find a value's
                                key.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                        path:
                          description: 'Path defines the REST API endpoint of Elasticsearch
                            to post write requests (default: nil).'
                          type: string
                        port:
                          description: 'The port number of your Elasticsearch node
                            (default: 9200).'
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        scheme:
                          description: 'Specify https if your Elasticsearch endpoint
                            supports SSL (default: http).'
                          type: string
                        user:
                          description: Optional, The login credentials to connect
                            to Elasticsearch
                          properties:
                            valueFrom:
                              description: ValueSource defines how to find a value's
                                key.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                      type: object
                    format:
                      description: format section
                      properties:
                        delimiter:
                          description: Delimiter for each field.
                          type: string
                        id:
                          description: The @id parameter specifies a unique name for
                            the configuration.
                          type: string
                        localtime:
                          description: If true, uses local time.
                          type: boolean
                        logLevel:
                          description: The @log_level parameter specifies the plugin-specific
                            logging level
                          type: string
                        newline:
                          description: Specify newline characters.
                          enum:
                          - lf
                          - crlf
                          type: string
                        outputTag:
                          description: Output tag field if true.
                          type: boolean
                        outputTime:
                          description: Output time field if true.
                          type: boolean
                        timeFormat:
                          description: Process value according to the specified format.
                            This is available only when time_type is *string
                          type: string
                        timeFormatFallbacks:
                          description: Uses the specified time format as a fallback
                            in the specified order. You can parse undetermined time
                            format by using time_format_fallbacks. This options is
                            enabled when time_type is mixed.
                          type: string
                        timeType:
                          description: parses/formats value according to this type,
                            default is *string
                          enum:
                          - float
                          - unixtime
                          - '*string'
                          - mixed
                          type: string
                        timezone:
                          description: Uses the specified timezone.
                          type: string
                        type:
                          description: The @type parameter specifies the type of the
                            plugin.
                          enum:
                          - out_file
                          - json
                          - ltsv
                          - csv
                          - msgpack
                          - hash
                          - single_value
                          type: string
                        utc:
                          description: If true, uses UTC.
                          type: boolean
                      type: object
                    forward:
                      description: out_forward plugin
                      properties:
                        ackResponseTimeout:
                          description: This option is used when require_ack_response
                            is true. This default value is based on popular tcp_syn_retries.
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        connectTimeout:
                          description: The connection timeout for the socket. When
                            the connection is timed out during the connection establishment,
                            Errno::ETIMEDOUT error is raised.
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        dnsRoundRobin:
                          description: Enable client-side DNS round robin. Uniform
                            randomly pick an IP address to send data when a hostname
                            has several IP addresses. heartbeat_type udp is not available
                            with dns_round_robintrue. Use heartbeat_type tcp or heartbeat_type
                            none.
                          type: boolean
                        expireDnsCache:
                          description: Sets TTL to expire DNS cache in seconds. Set
                            0 not to use DNS Cache.
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        hardTimeout:
                          description: The hard timeout used to detect server failure.
                            The default value is equal to the send_timeout parameter.
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        heartbeatInterval:
                          description: The interval of the heartbeat packer.
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        heartbeatType:
                          description: Specifies the transport protocol for heartbeats.
                            Set none to disable.
                          enum:
                          - transport
                          - tcp
                          - udp
                          - none
                          type: string
                        ignoreNetworkErrorsAtStartup:
                          description: Ignores DNS resolution and errors at startup
                            time.
                          type: boolean
                        keepalive:
                          description: Enables the keepalive connection.
                          type: boolean
                        keepaliveTimeout:
                          description: Timeout for keepalive. Default value is nil
                            which means to keep the connection alive as long as possible.
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        phiFailureDetector:
                          description: Use the "Phi accrual failure detector" to detect
                            server failure.
                          type: boolean
                        phiThreshold:
                          description: The threshold parameter used to detect server
                            faults.
                          type: integer
                        recoverWait:
                          description: The wait time before accepting a server fault
                            recovery.
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        requireAckResponse:
                          description: Changes the protocol to at-least-once. The
                            plugin waits the ack from destination's in_forward plugin.
                          type: boolean
                        security:
                          description: ServiceDiscovery defines the security section
                          properties:
                            allowAnonymousSource:
                              description: Allows the anonymous source. <client> sections
                                are required, if disabled.
                              type: string
                            selfHostname:
                              description: The hostname.
                              type: string
                            sharedKey:
                              description: The shared key for authentication.
                              type: string
                            user:
                              description: Defines user section directly.
                              properties:
                                password:
                                  description: Secret defines the key of a value.
                                  properties:
                                    valueFrom:
                                      description: ValueSource defines how to find
                                        a value's key.
                                      properties:
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  type: object
                                username:
                                  description: Secret defines the key of a value.
                                  properties:
                                    valueFrom:
                                      description: ValueSource defines how to find
                                        a value's key.
                                      properties:
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  type: object
                              type: object
                            userAuth:
                              description: If true, user-based authentication is used.
                              type: string
                          type: object
                        sendTimeout:
                          description: The timeout time when sending event logs.
                          pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                          type: string
                        servers:
                          description: Servers defines the servers section, at least
                            one is required
                          items:
                            description: Server defines the common parameters for
                              the server plugin
                            properties:
                              host:
                                description: Host defines the IP address or host name
                                  of the server.
                                type: string
                              id:
                                description: The @id parameter specifies a unique
                                  name for the configuration.
                                type: string
                              logLevel:
                                description: The @log_level parameter specifies the
                                  plugin-specific logging level
                                type: string
                              name:
                                description: Name defines the name of the server.
                                  Used for logging and certificate verification in
                                  TLS transport (when the host is the address).
                                type: string
                              password:
                                description: Password defines the password for authentication.
                                properties:
                                  valueFrom:
                                    description: ValueSource defines how to find a
                                      value's key.
                                    properties:
                                      secretKeyRef:
                                        description: Selects a key of a secret in
                                          the pod's namespace
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                type: object
                              port:
                                description: Port defines the port number of the host.
                                  Note that both TCP packets (event stream) and UDP
                                  packets (heartbeat messages) are sent to this port.
                                type: string
                              sharedKey:
                                description: SharedKey defines the shared key per
                                  server.
                                type: string
                              standby:
                                description: Standby marks a node as the standby node
                                  for an Active-Standby model between Fluentd nodes.
                                type: string
                              type:
                                description: The @type parameter specifies the type
                                  of the plugin.
                                type: string
                              username:
                                description: Username defines the username for authentication.
                                properties:
                                  valueFrom:
                                    description: ValueSource defines how to find a
                                      value's key.
                                    properties:
                                      secretKeyRef:
                                        description: Selects a key of a secret in
                                          the pod's namespace
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                type: object
                              weight:
                                description: Weight defines the load balancing weight
                                type: string
                            type: object
                          type: array
                        serviceDiscovery:
                          description: ServiceDiscovery defines the service_discovery
                            section
                          properties:
                            confEncoding:
                              description: The encoding of the configuration file.
                              type: string
                            dnsLookup:
                              description: DnsLookup resolves the hostname to IP address
                                of the SRV's Target.
                              type: string
                            dnsServerHost:
                              description: DnsServerHost defines the hostname of the
                                DNS server to request the SRV record.
                              type: string
                            hostname:
                              description: The name in RFC2782.
                              type: string
                            id:
                              description: The @id parameter specifies a unique name
                                for the configuration.
                              type: string
                            interval:
                              description: Interval defines the interval of sending
                                requests to DNS server.
                              type: string
                            logLevel:
                              description: The @log_level parameter specifies the
                                plugin-specific logging level
                              type: string
                            path:
                              description: The path of the target list. Default is
                                '/etc/fluent/sd.yaml'
                              type: string
                            proto:
                              description: Proto without the underscore in RFC2782.
                              type: string
                            server:
                              description: The server section of this plugin
                              properties:
                                host:
                                  description: Host defines the IP address or host
                                    name of the server.
                                  type: string
                                id:
                                  description: The @id parameter specifies a unique
                                    name for the configuration.
                                  type: string
                                logLevel:
                                  description: The @log_level parameter specifies
                                    the plugin-specific logging level
                                  type: string
                                name:
                                  description: Name defines the name of the server.
                                    Used for logging and certificate verification
                                    in TLS transport (when the host is the address).
                                  type: string
                                password:
                                  description: Password defines the password for authentication.
                                  properties:
                                    valueFrom:
                                      description: ValueSource defines how to find
                                        a value's key.
                                      properties:
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  type: object
                                port:
                                  description: Port defines the port number of the
                                    host. Note that both TCP packets (event stream)
                                    and UDP packets (heartbeat messages) are sent
                                    to this port.
                                  type: string
                                sharedKey:
                                  description: SharedKey defines the shared key per
                                    server.
                                  type: string
                                standby:
                                  description: Standby marks a node as the standby
                                    node for an Active-Standby model between Fluentd
                                    nodes.
                                  type: string
                                type:
                                  description: The @type parameter specifies the type
                                    of the plugin.
                                  type: string
                                username:
                                  description: Username defines the username for authentication.
                                  properties:
                                    valueFrom:
                                      description: ValueSource defines how to find
                                        a value's key.
                                      properties:
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  type: object
                                weight:
                                  description: Weight defines the load balancing weight
                                  type: string
                              type: object
                            service:
                              description: Service without the underscore in RFC2782.
                              type: string
                            type:
                              description: The @type parameter specifies the type
                                of the plugin.
                              enum:
                              - static
                              - file
                              - srv
                              type: string
                          required:
                          - type
                          type: object
                        tlsAllowSelfSignedCert:
                          description: Allows self-signed certificates or not.
                          type: boolean
                        tlsCertLogicalStoreName:
                          description: The certificate logical store name on Windows
                            system certstore. This parameter is for Windows only.
                          type: string
                        tlsCertPath:
                          description: The additional CA certificate path for TLS.
                          type: string
                        tlsCertThumbprint:
                          description: The certificate thumbprint for searching from
                            Windows system certstore. This parameter is for Windows
                            only.
                          type: string
                        tlsCertUseEnterpriseStore:
                          description: Enables the certificate enterprise store on
                            Windows system certstore. This parameter is for Windows
                            only.
                          type: boolean
                        tlsCiphers:
                          description: The cipher configuration of TLS transport.
                          type: string
                        tlsClientCertPath:
                          description: The client certificate path for TLS.
                          type: string
                        tlsClientPrivateKeyPassphrase:
                          description: The TLS private key passphrase for the client.
                          type: string
                        tlsClientPrivateKeyPath:
                          description: The client private key path for TLS.
                          type: string
                        tlsInsecureMode:
                          description: Skips all verification of certificates or not.
                          type: boolean
                        tlsVerifyHostname:
                          description: Verifies hostname of servers and certificates
                            or not in TLS transport.
                          type: boolean
                        tlsVersion:
                          description: The default version of TLS transport.
                          enum:
                          - TLSv1_1
                          - TLSv1_2
                          type: string
                        verifyConnectionAtStartup:
                          description: Verify that a connection can be made with one
                            of out_forward nodes at the time of startup.
                          type: boolean
                      required:
                      - servers
                      type: object
                    http:
                      description: out_http plugin
                      properties:
                        auth:
                          description: Auth section for this plugin
                          properties:
                            auth:
                              description: The method for HTTP authentication. Now
                                only basic.
                              type: string
                            password:
                              description: The password for basic authentication.
                              properties:
                                valueFrom:
                                  description: ValueSource defines how to find a value's
                                    key.
                                  properties:
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                  type: object
                              type: object
                            username:
                              description: The username for basic authentication.
                              properties:
                                valueFrom:
                                  description: ValueSource defines how to find a value's
                                    key.
                                  properties:
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                  type: object
                              type: object
                          type: object
                        contentType:
                          description: ContentType defines Content-Type for HTTP request.
                            out_http automatically set Content-Type for built-in formatters
                            when this parameter is not specified.
                          type: string
                        endpoint:
                          description: Endpoint defines the endpoint for HTTP request.
                            If you want to use HTTPS, use https prefix.
                          type: string
                        errorResponseAsUnrecoverable:
                          description: Raise UnrecoverableError when the response
                            code is not SUCCESS.
                          type: boolean
                        headers:
                          description: Headers defines the additional headers for
                            HTTP request.
                          type: string
                        headersFromPlaceholders:
                          description: Additional placeholder based headers for HTTP
                            request. If you want to use tag or record field, use this
                            parameter instead of headers.
                          type: string
                        httpMethod:
                          description: HttpMethod defines the method for HTTP request.
                          enum:
                          - post
                          - put
                          type: string
                        jsonArray:
                          description: JsonArray defines whether to use the array
                            format of JSON or not
                          type: boolean
                        openTimeout:
                          description: OpenTimeout defines the connection open timeout
                            in seconds.
                          type: integer
                        proxy:
                          description: Proxy defines the proxy for HTTP request.
                          type: string
                        readTimeout:
                          description: ReadTimeout defines the read timeout in seconds.
                          type: integer
                        retryableResponseCodes:
                          description: The list of retryable response codes. If the
                            response code is included in this list, out_http retries
                            the buffer flush.
                          type: string
                        sslTimeout:
                          description: SslTimeout defines the TLS timeout in seconds.
                          type: integer
                        tlsCaCertPath:
                          description: TlsCaCertPath defines the CA certificate path
                            for TLS.
                          type: string
                        tlsCiphers:
                          description: TlsCiphers defines the cipher suites configuration
                            of TLS.
                          type: string
                        tlsClientCertPath:
                          description: TlsClientCertPath defines the client certificate
                            path for TLS.
                          type: string
                        tlsPrivateKeyPassphrase:
                          description: TlsPrivateKeyPassphrase defines the client
                            private key passphrase for TLS.
                          type: string
                        tlsPrivateKeyPath:
                          description: TlsPrivateKeyPath defines the client private
                            key path for TLS.
                          type: string
                        tlsVerifyMode:
                          description: TlsVerifyMode defines the verify mode of TLS.
                          enum:
                          - peer
                          - none
                          type: string
                        tlsVersion:
                          description: TlsVersion defines the default version of TLS
                            transport.
                          enum:
                          - TLSv1_1
                          - TLSv1_2
                          type: string
                      type: object
                    inject:
                      description: inject section
                      properties:
                        hostname:
                          description: Hostname value
                          type: string
                        hostnameKey:
                          description: The field name to inject hostname
                          type: string
                        inline:
                          description: Time section
                          properties:
                            localtime:
                              description: If true, uses local time.
                              type: boolean
                            timeFormat:
                              description: Process value according to the specified
                                format. This is available only when time_type is *string
                              type: string
                            timeFormatFallbacks:
                              description: Uses the specified time format as a fallback
                                in the specified order. You can parse undetermined
                                time format by using time_format_fallbacks. This options
                                is enabled when time_type is mixed.
                              type: string
                            timeType:
                              description: parses/formats value according to this
                                type, default is *string
                              enum:
                              - float
                              - unixtime
                              - '*string'
                              - mixed
                              type: string
                            timezone:
                              description: Uses the specified timezone.
                              type: string
                            utc:
                              description: If true, uses UTC.
                              type: boolean
                          type: object
                        tagKey:
                          description: The field name to inject tag
                          type: string
                        timeKey:
                          description: The field name to inject time
                          type: string
                        workerIdKey:
                          description: The field name to inject worker_id
                          type: string
                      type: object
                    kafka:
                      description: out_kafka plugin
                      properties:
                        brokers:
                          description: 'The list of all seed brokers, with their host
                            and port information. Default: localhost:9092'
                          type: string
                        compressionCodec:
                          description: 'The codec the producer uses to compress messages
                            (default: nil).'
                          enum:
                          - gzip
                          - snappy
                          type: string
                        defaultTopic:
                          description: 'The name of the default topic. (default: nil)'
                          type: string
                        requiredAcks:
                          description: The number of acks required per request.
                          type: integer
                        topicKey:
                          description: The field name for the target topic. If the
                            field value is app, this plugin writes events to the app
                            topic.
                          type: string
                        useEventTime:
                          description: Set fluentd event time to Kafka's CreateTime.
                          type: boolean
                      type: object
                    logLevel:
                      description: The @log_level parameter specifies the plugin-specific
                        logging level
                      type: string
                    loki:
                      description: out_loki plugin
                      properties:
                        autoKubernetesLabels:
                          description: If set to true, it will add all Kubernetes
                            labels to the Stream labels.
                          enum:
                          - "on"
                          - "off"
                          type: string
                        host:
                          description: Loki hostname or IP address.
                          type: string
                        httpPassword:
                          description: Password for user defined in HTTP_User Set
                            HTTP basic authentication password
                          properties:
                            valueFrom:
                              description: ValueSource defines how to find a value's
                                key.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                        httpUser:
                          description: Set HTTP basic authentication user name.
                          properties:
                            valueFrom:
                              description: ValueSource defines how to find a value's
                                key.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                        labelKeys:
                          description: Optional list of record keys that will be placed
                            as stream labels. This configuration property is for records
                            key only.
                          items:
                            type: string
                          type: array
                        labels:
                          description: Stream labels for API request. It can be multiple
                            comma separated of strings specifying  key=value pairs.
                            In addition to fixed parameters, it also allows to add
                            custom record keys (similar to label_keys property).
                          items:
                            type: string
                          type: array
                        lineFormat:
                          description: Format to use when flattening the record to
                            a log line. Valid values are json or key_value. If set
                            to json,  the log line sent to Loki will be the Fluentd
                            record dumped as JSON. If set to key_value, the log line
                            will be each item in the record concatenated together
                            (separated by a single space) in the format.
                          enum:
                          - json
                          - key_value
                          type: string
                        port:
                          description: Loki TCP port
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        tenantID:
                          description: Tenant ID used by default to push logs to Loki.
                            If omitted or empty it assumes Loki is running in single-tenant
                            mode and no X-Scope-OrgID header is sent.
                          properties:
                            valueFrom:
                              description: ValueSource defines how to find a value's
                                key.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                        tls:
                          description: Fluentd provides integrated support for Transport
                            Layer Security (TLS) and it predecessor Secure Sockets
                            Layer (SSL) respectively.
                          properties:
                            caFile:
                              description: Absolute path to CA certificate file
                              type: string
                            caPath:
                              description: Absolute path to scan for certificate files
                              type: string
                            crtFile:
                              description: Absolute path to Certificate file
                              type: string
                            debug:
                              description: 'Set TLS debug verbosity level. It accept
                                the following values: 0 (No debug), 1 (Error), 2 (State
                                change), 3 (Informational) and 4 Verbose'
                              enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                              format: int32
                              type: integer
                            keyFile:
                              description: Absolute path to private Key file
                              type: string
                            keyPassword:
                              description: Optional password for tls.key_file file
                              properties:
                                valueFrom:
                                  description: ValueSource defines how to find a value's
                                    key.
                                  properties:
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                  type: object
                              type: object
                            verify:
                              description: Force certificate validation
                              type: boolean
                            vhost:
                              description: Hostname to be used for TLS SNI extension
                              type: string
                          type: object
                      required:
                      - host
                      type: object
                    opensearch:
                      description: out_opensearch plugin
                      properties:
                        host:
                          description: 'The hostname of your Opensearch node (default:
                            localhost).'
                          type: string
                        hosts:
                          description: Hosts defines a list of hosts if you want to
                            connect to more than one Openearch nodes
                          type: string
                        indexName:
                          description: IndexName defines the placeholder syntax of
                            Fluentd plugin API. See https://docs.fluentd.org/configuration/buffer-section.
                          type: string
                        logstashFormat:
                          description: 'If true, Fluentd uses the conventional index
                            name format logstash-%Y.%m.%d (default: false). This option
                            supersedes the index_name option.'
                          type: boolean
                        logstashPrefix:
                          description: 'LogstashPrefix defines the logstash prefix
                            index name to write events when logstash_format is true
                            (default: logstash).'
                          type: string
                        password:
                          description: Optional, The login credentials to connect
                            to Opensearch
                          properties:
                            valueFrom:
                              description: ValueSource defines how to find a value's
                                key.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                        path:
                          description: 'Path defines the REST API endpoint of Opensearch
                            to post write requests (default: nil).'
                          type: string
                        port:
                          description: 'The port number of your Opensearch node (default:
                            9200).'
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        scheme:
                          description: 'Specify https if your Opensearch endpoint
                            supports SSL (default: http).'
                          type: string
                        user:
                          description: Optional, The login credentials to connect
                            to Opensearch
                          properties:
                            valueFrom:
                              description: ValueSource defines how to find a value's
                                key.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                      type: object
                    s3:
                      description: out_s3 plugin
                      properties:
                        awsKeyId:
                          description: The AWS access key id.
                          type: string
                        awsSecKey:
                          description: The AWS secret key.
                          type: string
                        path:
                          description: The path prefix of the files on S3.
                          type: string
                        proxyUri:
                          description: The proxy URL.
                          type: string
                        s3Bucket:
                          description: The Amazon S3 bucket name.
                          type: string
                        s3ObjectKeyFormat:
                          description: The actual S3 path. This is interpolated to
                            the actual path.
                          type: string
                        s3Region:
                          description: The Amazon S3 region name
                          type: string
                        sslVerifyPeer:
                          description: Verify the SSL certificate of the endpoint.
                          type: boolean
                        storeAs:
                          description: The compression type.
                          enum:
                          - gzip
                          - lzo
                          - json
                          - txt
                          type: string
                      type: object
                    stdout:
                      description: out_stdout plugin
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: OutputStatus defines the observed state of Output
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
