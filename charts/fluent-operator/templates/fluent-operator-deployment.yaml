apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluent-operator
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/name: fluent-operator
  annotations:
    {{- toYaml .Values.operator.annotations| nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: fluent-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: fluent-operator
        {{- if .Values.operator.labels }}
        {{- toYaml .Values.operator.labels | nindent 8 }}
        {{- end }}
      {{- if .Values.operator.annotations }}
      annotations:
        {{- toYaml .Values.operator.annotations| nindent 8 }}
      {{- end }}
    spec:
      {{- if eq .Values.containerRuntime "docker" }}
      volumes:
      - name: env
        emptyDir: {}
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      initContainers:
      - name: setenv
        image: {{ .Values.operator.initcontainer.repository }}:{{ .Values.operator.initcontainer.tag }}
        command:
        - /bin/sh
        - '-c'
        - set -ex;
          echo CONTAINER_ROOT_DIR=$(docker info -f '{{`{{.DockerRootDir}}`}}' 2> /dev/null) > /fluent-operator/fluent-bit.env
        volumeMounts:
        - name: env
          mountPath: /fluent-operator
        - name: dockersock
          readOnly: true
          mountPath: /var/run/docker.sock
      {{- else if eq .Values.containerRuntime "containerd" }}
      volumes:
      - name: env
        emptyDir: {}
      initContainers:
      - name: setenv
        image: {{ .Values.operator.initcontainer.repository }}:{{ .Values.operator.initcontainer.tag }}
        command:
        - /bin/sh
        - '-c'
        - set -ex;
          echo CONTAINER_ROOT_DIR={{ .Values.operator.logPath.containerd }} > /fluent-operator/fluent-bit.env
        volumeMounts:
        - name: env
          mountPath: /fluent-operator
      {{- else if eq .Values.containerRuntime "crio" }}
      volumes:
        - name: env
          emptyDir: {}
      initContainers:
      - name: setenv
        image: {{ .Values.operator.initcontainer.repository }}:{{ .Values.operator.initcontainer.tag }}
        command:
        - /bin/sh
        - '-c'
        - set -ex;
          echo CONTAINER_ROOT_DIR={{ .Values.operator.logPath.crio }} > /fluent-operator/fluent-bit.env
        volumeMounts:
        - name: env
          mountPath: /fluent-operator
      {{- end }}
      containers:
      - name: fluent-operator
        image: {{ .Values.operator.container.repository }}:{{ .Values.operator.container.tag }}
        resources:
          {{- toYaml .Values.operator.resources | nindent 10 }}
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
        {{- with .Values.operator.disableComponentControllers }}
        args: ["--disable-component-controllers","{{ . }}"]
        {{- end }}
        volumeMounts:
        - name: env
          mountPath: /fluent-operator
      serviceAccountName: fluent-operator
      {{- if .Values.operator.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml .Values.operator.imagePullSecrets | nindent 8 }}
      {{- end }}
