apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: clusterfluentbitconfigs.fluentbit.fluent.io
spec:
  group: fluentbit.fluent.io
  names:
    kind: ClusterFluentBitConfig
    listKind: ClusterFluentBitConfigList
    plural: clusterfluentbitconfigs
    singular: clusterfluentbitconfig
  scope: Cluster
  versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ClusterFluentBitConfig is the Schema for the clusterfluentbitconfigs
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterFluentBitConfigSpec defines the desired state of ClusterFluentBitConfig
              properties:
                clusterfilterSelector:
                  description: Select clusterfilter plugins
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the key
                          and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship to
                              a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                clusterinputSelector:
                  description: Select clusterinput plugins
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the key
                          and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship to
                              a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                clusteroutputSelector:
                  description: Select clusteroutput plugins
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the key
                          and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship to
                              a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                clusterparserSelector:
                  description: Select clusterparser plugins
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the key
                          and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship to
                              a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                service:
                  description: Service defines the global behaviour of the Fluent Bit
                    engine.
                  properties:
                    daemon:
                      description: If true go to background on start
                      type: boolean
                    flushSeconds:
                      description: Interval to flush clusteroutput
                      format: int64
                      type: integer
                    graceSeconds:
                      description: Wait time on exit
                      format: int64
                      type: integer
                    httpListen:
                      description: Address to listen
                      pattern: ^\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}$
                      type: string
                    httpPort:
                      description: Port to listen
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    httpServer:
                      description: If true enable statistics HTTP server
                      type: boolean
                    logFile:
                      description: File to log diagnostic clusteroutput
                      type: string
                    logLevel:
                      description: Diagnostic level (error/warning/info/debug/trace)
                      enum:
                        - error
                        - warning
                        - info
                        - debug
                        - trace
                      type: string
                    parsersFile:
                      description: Optional 'parsers' config file (can be multiple)
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: clusterinputs.fluentbit.fluent.io
spec:
  group: fluentbit.fluent.io
  names:
    kind: ClusterInput
    listKind: ClusterInputList
    plural: clusterinputs
    singular: clusterinput
  scope: Cluster
  versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ClusterInput is the Schema for the clusterinputs API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterInputSpec defines the desired state of ClusterInput
              properties:
                alias:
                  description: A user friendly alias name for this clusterinput plugin.
                    Used in metrics for distinction of each configured clusterinput.
                  type: string
                dummy:
                  description: Dummy defines Dummy Input configuration.
                  properties:
                    dummy:
                      description: Dummy JSON record.
                      type: string
                    rate:
                      description: Events number generated per second.
                      format: int32
                      type: integer
                    samples:
                      description: Sample events to generate.
                      format: int32
                      type: integer
                    tag:
                      description: Tag name associated to all records comming from this
                        plugin.
                      type: string
                  type: object
                systemd:
                  description: Systemd defines Systemd Input configuration.
                  properties:
                    db:
                      description: Specify the database file to keep track of monitored
                        files and offsets.
                      type: string
                    dbSync:
                      description: 'Set a default synchronization (I/O) method. values:
                      Extra, Full, Normal, Off. This flag affects how the internal
                      SQLite engine do synchronization to disk, for more details about
                      each option please refer to this section. note: this option
                      was introduced on Fluent Bit v1.4.6.'
                      enum:
                        - Extra
                        - Full
                        - Normal
                        - "Off"
                      type: string
                    maxEntries:
                      description: When Fluent Bit starts, the Journal might have a
                        high number of logs in the queue. In order to avoid delays and
                        reduce memory usage, this option allows to specify the maximum
                        number of log entries that can be processed per round. Once
                        the limit is reached, Fluent Bit will continue processing the
                        remaining log entries once Journald performs the notification.
                      type: integer
                    maxFields:
                      description: Set a maximum number of fields (keys) allowed per
                        record.
                      type: integer
                    path:
                      description: Optional path to the Systemd journal directory, if
                        not set, the plugin will use default paths to read local-only
                        logs.
                      type: string
                    readFromTail:
                      description: Start reading new entries. Skip entries already stored
                        in Journald.
                      enum:
                        - "on"
                        - "off"
                      type: string
                    stripUnderscores:
                      description: Remove the leading underscore of the Journald field
                        (key). For example the Journald field _PID becomes the key PID.
                      enum:
                        - "on"
                        - "off"
                      type: string
                    systemdFilter:
                      description: 'Allows to perform a query over logs that contains
                      a specific Journald key/value pairs, e.g: _SYSTEMD_UNIT=UNIT.
                      The Systemd_Filter option can be specified multiple times in
                      the input section to apply multiple filters as required.'
                      items:
                        type: string
                      type: array
                    systemdFilterType:
                      description: Define the filter type when Systemd_Filter is specified
                        multiple times. Allowed values are And and Or. With And a record
                        is matched only when all of the Systemd_Filter have a match.
                        With Or a record is matched when any of the Systemd_Filter has
                        a match.
                      enum:
                        - And
                        - Or
                      type: string
                    tag:
                      description: 'The tag is used to route messages but on Systemd
                      plugin there is an extra functionality: if the tag includes
                      a star/wildcard, it will be expanded with the Systemd Unit file
                      (e.g: host.* => host.UNIT_NAME).'
                      type: string
                  type: object
                tail:
                  description: Tail defines Tail Input configuration.
                  properties:
                    bufferChunkSize:
                      description: Set the initial buffer size to read files data. This
                        value is used too to increase buffer size. The value must be
                        according to the Unit Size specification.
                      pattern: ^\d+(k|K|KB|kb|m|M|MB|mb|g|G|GB|gb)?$
                      type: string
                    bufferMaxSize:
                      description: 'Set the limit of the buffer size per monitored file.
                      When a buffer needs to be increased (e.g: very long lines),
                      this value is used to restrict how much the memory buffer can
                      grow. If reading a file exceed this limit, the file is removed
                      from the monitored file list The value must be according to
                      the Unit Size specification.'
                      pattern: ^\d+(k|K|KB|kb|m|M|MB|mb|g|G|GB|gb)?$
                      type: string
                    db:
                      description: Specify the database file to keep track of monitored
                        files and offsets.
                      type: string
                    dbSync:
                      description: 'Set a default synchronization (I/O) method. Values:
                      Extra, Full, Normal, Off.'
                      enum:
                        - Extra
                        - Full
                        - Normal
                        - "Off"
                      type: string
                    disableInotifyWatcher:
                      description: DisableInotifyWatcher will disable inotify and use
                        the file stat watcher instead.
                      type: boolean
                    dockerMode:
                      description: If enabled, the plugin will recombine split Docker
                        log lines before passing them to any parser as configured above.
                        This mode cannot be used at the same time as Multiline.
                      type: boolean
                    dockerModeFlushSeconds:
                      description: Wait period time in seconds to flush queued unfinished
                        split lines.
                      format: int64
                      type: integer
                    excludePath:
                      description: 'Set one or multiple shell patterns separated by
                      commas to exclude files matching a certain criteria, e.g: exclude_path=*.gz,*.zip'
                      type: string
                    ignoredOlder:
                      description: Ignores records which are older than this time in
                        seconds. Supports m,h,d (minutes, hours, days) syntax. Default
                        behavior is to read all records from specified files. Only available
                        when a Parser is specificied and it can parse the time of a
                        record.
                      pattern: ^\d+(m|h|d)?$
                      type: string
                    key:
                      description: When a message is unstructured (no parser applied),
                        it's appended as a string under the key name log. This option
                        allows to define an alternative name for that key.
                      type: string
                    memBufLimit:
                      description: Set a limit of memory that Tail plugin can use when
                        appending data to the Engine. If the limit is reach, it will
                        be paused; when the data is flushed it resumes.
                      type: string
                    multiline:
                      description: If enabled, the plugin will try to discover multiline
                        messages and use the proper parsers to compose the outgoing
                        messages. Note that when this option is enabled the Parser option
                        is not used.
                      type: boolean
                    multilineFlushSeconds:
                      description: Wait period time in seconds to process queued multiline
                        messages
                      format: int64
                      type: integer
                    parser:
                      description: Specify the name of a parser to interpret the entry
                        as a structured message.
                      type: string
                    parserFirstline:
                      description: Name of the parser that matchs the beginning of a
                        multiline message. Note that the regular expression defined
                        in the parser must include a group name (named capture)
                      type: string
                    parserN:
                      description: Optional-extra parser to interpret and structure
                        multiline entries. This option can be used to define multiple
                        parsers.
                      items:
                        type: string
                      type: array
                    path:
                      description: Pattern specifying a specific log files or multiple
                        ones through the use of common wildcards.
                      type: string
                    pathKey:
                      description: If enabled, it appends the name of the monitored
                        file as part of the record. The value assigned becomes the key
                        in the map.
                      type: string
                    readFromHead:
                      description: For new discovered files on start (without a database
                        offset/position), read the content from the head of the file,
                        not tail.
                      type: boolean
                    refreshIntervalSeconds:
                      description: The interval of refreshing the list of watched files
                        in seconds.
                      format: int64
                      type: integer
                    rotateWaitSeconds:
                      description: Specify the number of extra time in seconds to monitor
                        a file once is rotated in case some pending data is flushed.
                      format: int64
                      type: integer
                    skipLongLines:
                      description: When a monitored file reach it buffer capacity due
                        to a very long line (Buffer_Max_Size), the default behavior
                        is to stop monitoring that file. Skip_Long_Lines alter that
                        behavior and instruct Fluent Bit to skip long lines and continue
                        processing other lines that fits into the buffer size.
                      type: boolean
                    tag:
                      description: Set a tag (with regex-extract fields) that will be
                        placed on lines read. E.g. kube.<namespace_name>.<pod_name>.<container_name>
                      type: string
                    tagRegex:
                      description: Set a regex to exctract fields from the file
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: clusterfilters.fluentbit.fluent.io
spec:
  group: fluentbit.fluent.io
  names:
    kind: ClusterFilter
    listKind: ClusterFilterList
    plural: clusterfilters
    singular: clusterfilter
  scope: Cluster
  versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ClusterFilter is the Schema for the clusterfilters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterFilterSpec defines the desired state of ClusterFilter
              properties:
                filters:
                  description: A set of clusterfilter plugins in order.
                  items:
                    properties:
                      clusterparser:
                        description: Parser defines Parser Filter configuration.
                        properties:
                          keyName:
                            description: Specify field name in record to parse.
                            type: string
                          parser:
                            description: Specify the parser name to interpret the field.
                              Multiple Parser entries are allowed (split by comma).
                            type: string
                          preserveKey:
                            description: Keep original Key_Name field in the parsed
                              result. If false, the field will be removed.
                            type: boolean
                          reserveData:
                            description: Keep all other original fields in the parsed
                              result. If false, all other original fields will be removed.
                            type: boolean
                          unescapeKey:
                            description: 'If the key is a escaped string (e.g: stringify
                            JSON), unescape the string before to apply the parser.'
                            type: boolean
                        type: object
                      grep:
                        description: Grep defines Grep Filter configuration.
                        properties:
                          exclude:
                            description: 'Exclude records which field matches the regular
                            expression. Value Format: FIELD REGEX'
                            type: string
                          regex:
                            description: 'Keep records which field matches the regular
                            expression. Value Format: FIELD REGEX'
                            type: string
                        type: object
                      kubernetes:
                        description: Kubernetes defines Kubernetes Filter configuration.
                        properties:
                          annotations:
                            description: Include Kubernetes resource annotations in
                              the extra metadata.
                            type: boolean
                          bufferSize:
                            description: Set the buffer size for HTTP client when reading
                              responses from Kubernetes API server.
                            pattern: ^\d+(k|K|KB|kb|m|M|MB|mb|g|G|GB|gb)?$
                            type: string
                          dummyMeta:
                            description: If set, use dummy-meta data (for test/dev purposes)
                            type: boolean
                          k8sLoggingExclude:
                            description: Allow Kubernetes Pods to exclude their logs
                              from the log processor (read more about it in Kubernetes
                              Annotations section).
                            type: boolean
                          k8sLoggingParser:
                            description: Allow Kubernetes Pods to suggest a pre-defined
                              Parser (read more about it in Kubernetes Annotations section)
                            type: boolean
                          keepLog:
                            description: When Keep_Log is disabled, the log field is
                              removed from the incoming message once it has been successfully
                              merged (Merge_Log must be enabled as well).
                            type: boolean
                          kubeCAFile:
                            description: CA certificate file
                            type: string
                          kubeCAPath:
                            description: Absolute path to scan for certificate files
                            type: string
                          kubeMetaPreloadCacheDir:
                            description: If set, Kubernetes meta-data can be cached/pre-loaded
                              from files in JSON format in this directory, named as
                              namespace-pod.meta
                            type: string
                          kubeTagPrefix:
                            description: When the source records comes from Tail input
                              plugin, this option allows to specify what's the prefix
                              used in Tail configuration.
                            type: string
                          kubeTokenFile:
                            description: Token file
                            type: string
                          kubeURL:
                            description: API Server end-point
                            type: string
                          labels:
                            description: Include Kubernetes resource labels in the extra
                              metadata.
                            type: boolean
                          mergeLog:
                            description: When enabled, it checks if the log field content
                              is a JSON string map, if so, it append the map fields
                              as part of the log structure.
                            type: boolean
                          mergeLogKey:
                            description: When Merge_Log is enabled, the filter tries
                              to assume the log field from the incoming message is a
                              JSON string message and make a structured representation
                              of it at the same level of the log field in the map. Now
                              if Merge_Log_Key is set (a string name), all the new structured
                              fields taken from the original log content are inserted
                              under the new key.
                            type: string
                          mergeLogTrim:
                            description: When Merge_Log is enabled, trim (remove possible
                              \n or \r) field values.
                            type: boolean
                          mergeParser:
                            description: Optional parser name to specify how to parse
                              the data contained in the log key. Recommended use is
                              for developers or testing only.
                            type: string
                          regexParser:
                            description: Set an alternative Parser to process record
                              Tag and extract pod_name, namespace_name, container_name
                              and docker_id. The parser must be registered in a parsers
                              file (refer to parser filter-kube-test as an example).
                            type: string
                          tlsDebug:
                            description: Debug level between 0 (nothing) and 4 (every
                              detail).
                            format: int32
                            type: integer
                          tlsVerify:
                            description: When enabled, turns on certificate validation
                              when connecting to the Kubernetes API server.
                            type: boolean
                          useJournal:
                            description: When enabled, the filter reads logs coming
                              in Journald format.
                            type: boolean
                        type: object
                      lua:
                        description: Lua defines Lua Filter configuration.
                        properties:
                          call:
                            description: Lua function name that will be triggered to
                              do filtering. It's assumed that the function is declared
                              inside the Script defined above.
                            type: string
                          protectedMode:
                            description: If enabled, Lua script will be executed in
                              protected mode. It prevents to crash when invalid Lua
                              script is executed. Default is true.
                            type: boolean
                          script:
                            description: Path to the Lua script that will be used.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key
                                  must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                          timeAsTable:
                            description: By default when the Lua script is invoked,
                              the record timestamp is passed as a Floating number which
                              might lead to loss precision when the data is converted
                              back. If you desire timestamp precision enabling this
                              option will pass the timestamp as a Lua table with keys
                              sec for seconds since epoch and nsec for nanoseconds.
                            type: boolean
                          typeIntKey:
                            description: If these keys are matched, the fields are converted
                              to integer. If more than one key, delimit by space. Note
                              that starting from Fluent Bit v1.6 integer data types
                              are preserved and not converted to double as in previous
                              versions.
                            items:
                              type: string
                            type: array
                        required:
                          - call
                          - script
                        type: object
                      modify:
                        description: Modify defines Modify Filter configuration.
                        properties:
                          conditions:
                            description: All conditions have to be true for the rules
                              to be applied.
                            items:
                              description: The plugin supports the following conditions
                              properties:
                                aKeyMatches:
                                  description: Is true if a key matches regex KEY
                                  type: string
                                keyDoesNotExist:
                                  additionalProperties:
                                    type: string
                                  description: Is true if KEY does not exist
                                  type: object
                                keyExists:
                                  description: Is true if KEY exists
                                  type: string
                                keyValueDoesNotEqual:
                                  additionalProperties:
                                    type: string
                                  description: Is true if KEY exists and its value is
                                    not VALUE
                                  type: object
                                keyValueDoesNotMatch:
                                  additionalProperties:
                                    type: string
                                  description: Is true if key KEY exists and its value
                                    does not match VALUE
                                  type: object
                                keyValueEquals:
                                  additionalProperties:
                                    type: string
                                  description: Is true if KEY exists and its value is
                                    VALUE
                                  type: object
                                keyValueMatches:
                                  additionalProperties:
                                    type: string
                                  description: Is true if key KEY exists and its value
                                    matches VALUE
                                  type: object
                                matchingKeysDoNotHaveMatchingValues:
                                  additionalProperties:
                                    type: string
                                  description: Is true if all keys matching KEY have
                                    values that do not match VALUE
                                  type: object
                                matchingKeysHaveMatchingValues:
                                  additionalProperties:
                                    type: string
                                  description: Is true if all keys matching KEY have
                                    values that match VALUE
                                  type: object
                                noKeyMatches:
                                  description: Is true if no key matches regex KEY
                                  type: string
                              type: object
                            type: array
                          rules:
                            description: Rules are applied in the order they appear,
                              with each rule operating on the result of the previous
                              rule.
                            items:
                              description: The plugin supports the following rules
                              properties:
                                add:
                                  additionalProperties:
                                    type: string
                                  description: Add a key/value pair with key KEY and
                                    value VALUE if KEY does not exist
                                  type: object
                                copy:
                                  additionalProperties:
                                    type: string
                                  description: Copy a key/value pair with key KEY to
                                    COPIED_KEY if KEY exists AND COPIED_KEY does not
                                    exist
                                  type: object
                                hardCopy:
                                  additionalProperties:
                                    type: string
                                  description: Copy a key/value pair with key KEY to
                                    COPIED_KEY if KEY exists. If COPIED_KEY already
                                    exists, this field is overwritten
                                  type: object
                                hardRename:
                                  additionalProperties:
                                    type: string
                                  description: Rename a key/value pair with key KEY
                                    to RENAMED_KEY if KEY exists. If RENAMED_KEY already
                                    exists, this field is overwritten
                                  type: object
                                remove:
                                  description: Remove a key/value pair with key KEY
                                    if it exists
                                  type: string
                                removeRegex:
                                  description: Remove all key/value pairs with key matching
                                    regexp KEY
                                  type: string
                                removeWildcard:
                                  description: Remove all key/value pairs with key matching
                                    wildcard KEY
                                  type: string
                                rename:
                                  additionalProperties:
                                    type: string
                                  description: Rename a key/value pair with key KEY
                                    to RENAMED_KEY if KEY exists AND RENAMED_KEY does
                                    not exist
                                  type: object
                                set:
                                  additionalProperties:
                                    type: string
                                  description: Add a key/value pair with key KEY and
                                    value VALUE. If KEY already exists, this field is
                                    overwritten
                                  type: object
                              type: object
                            type: array
                        type: object
                      nest:
                        description: Nest defines Nest Filter configuration.
                        properties:
                          addPrefix:
                            description: Prefix affected keys with this string
                            type: string
                          nestUnder:
                            description: Nest records matching the Wildcard under this
                              key
                            type: string
                          nestedUnder:
                            description: Lift records nested under the Nested_under
                              key
                            type: string
                          operation:
                            description: Select the operation nest or lift
                            enum:
                              - nest
                              - lift
                            type: string
                          removePrefix:
                            description: Remove prefix from affected keys if it matches
                              this string
                            type: string
                          wildcard:
                            description: Nest records which field matches the wildcard
                            items:
                              type: string
                            type: array
                        type: object
                      recordModifier:
                        description: RecordModifier defines Record Modifier Filter configuration.
                        properties:
                          records:
                            description: Append fields. This parameter needs key and
                              value pair.
                            items:
                              type: string
                            type: array
                          removeKeys:
                            description: If the key is matched, that field is removed.
                            items:
                              type: string
                            type: array
                          whitelistKeys:
                            description: If the key is not matched, that field is removed.
                            items:
                              type: string
                            type: array
                        type: object
                      rewriteTag:
                        description: RewriteTag defines a RewriteTag configuration.
                        properties:
                          emitterName:
                            description: When the filter emits a record under the new
                              Tag, there is an internal emitter plugin that takes care
                              of the job. Since this emitter expose metrics as any other
                              component of the pipeline, you can use this property to
                              configure an optional name for it.
                            type: string
                          rules:
                            description: 'Defines the matching criteria and the format
                            of the Tag for the matching record. The Rule format have
                            four components: KEY REGEX NEW_TAG KEEP.'
                            items:
                              type: string
                            type: array
                        type: object
                      throttle:
                        description: Throttle defines a Throttle configuration.
                        properties:
                          interval:
                            description: Interval is the time interval expressed in
                              "sleep" format. e.g. 3s, 1.5m, 0.5h, etc.
                            pattern: ^\d+(\.[0-9]{0,2})?(s|m|h|d)?$
                            type: string
                          printStatus:
                            description: PrintStatus represents whether to print status
                              messages with current rate and the limits to information
                              logs.
                            type: boolean
                          rate:
                            description: Rate is the amount of messages for the time.
                            format: int64
                            type: integer
                          window:
                            description: Window is the amount of intervals to calculate
                              average over.
                            format: int64
                            type: integer
                        type: object
                    type: object
                  type: array
                match:
                  description: A pattern to match against the tags of incoming records.
                    It's case-sensitive and support the star (*) character as a wildcard.
                  type: string
                matchRegex:
                  description: A regular expression to match against the tags of incoming
                    records. Use this option if you want to use the full regex syntax.
                  type: string
              type: object
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: clusterparsers.fluentbit.fluent.io
spec:
  group: fluentbit.fluent.io
  names:
    kind: ClusterParser
    listKind: ClusterParserList
    plural: clusterparsers
    singular: clusterparser
  scope: Cluster
  versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ClusterParser is the Schema for the clusterparsers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterParserSpec defines the desired state of ClusterParser
              properties:
                decoders:
                  description: 'Decoders are a built-in feature available through the
                  Parsers file, each Parser definition can optionally set one or multiple
                  decoders. There are two type of decoders type: Decode_Field and
                  Decode_Field_As.'
                  items:
                    properties:
                      decodeField:
                        description: If the content can be decoded in a structured message,
                          append that structure message (keys and values) to the original
                          log message.
                        type: string
                      decodeFieldAs:
                        description: Any content decoded (unstructured or structured)
                          will be replaced in the same key/value, no extra keys are
                          added.
                        type: string
                    type: object
                  type: array
                json:
                  description: JSON defines json clusterparser configuration.
                  properties:
                    timeFormat:
                      description: Time_Format, eg. %Y-%m-%dT%H:%M:%S %z
                      type: string
                    timeKeep:
                      description: Time_Keep
                      type: boolean
                    timeKey:
                      description: Time_Key
                      type: string
                  type: object
                logfmt:
                  description: Logfmt defines logfmt clusterparser configuration.
                  type: object
                ltsv:
                  description: LTSV defines ltsv clusterparser configuration.
                  properties:
                    timeFormat:
                      description: Time_Format, eg. %Y-%m-%dT%H:%M:%S %z
                      type: string
                    timeKeep:
                      description: Time_Keep
                      type: boolean
                    timeKey:
                      description: Time_Key
                      type: string
                    types:
                      type: string
                  type: object
                regex:
                  description: Regex defines regex clusterparser configuration.
                  properties:
                    regex:
                      type: string
                    timeFormat:
                      description: Time_Format, eg. %Y-%m-%dT%H:%M:%S %z
                      type: string
                    timeKeep:
                      description: Time_Keep
                      type: boolean
                    timeKey:
                      description: Time_Key
                      type: string
                    types:
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: clusteroutputs.fluentbit.fluent.io
spec:
  group: fluentbit.fluent.io
  names:
    kind: ClusterOutput
    listKind: ClusterOutputList
    plural: clusteroutputs
    singular: clusteroutput
  scope: Cluster
  versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ClusterOutput is the Schema for the clusteroutputs API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterOutputSpec defines the desired state of ClusterOutput
              properties:
                alias:
                  description: A user friendly alias name for this clusteroutput plugin.
                    Used in metrics for distinction of each configured clusteroutput.
                  type: string
                datadog:
                  description: DataDog defines DataDog Output configuration.
                  properties:
                    apikey:
                      description: Your Datadog API key.
                      type: string
                    compress:
                      description: Compress  the payload in GZIP format. Datadog supports
                        and recommends setting this to gzip.
                      type: string
                    dd_message_key:
                      description: By default, the plugin searches for the key 'log'
                        and remap the value to the key 'message'. If the property is
                        set, the plugin will search the property name key.
                      type: string
                    dd_service:
                      description: The human readable name for your service generating
                        the logs.
                      type: string
                    dd_source:
                      description: A human readable name for the underlying technology
                        of your service.
                      type: string
                    dd_tags:
                      description: The tags you want to assign to your logs in Datadog.
                      type: string
                    host:
                      description: Host is the Datadog server where you are sending
                        your logs.
                      type: string
                    include_tag_key:
                      description: If enabled, a tag is appended to output. The key
                        name is used tag_key property.
                      type: boolean
                    json_date_key:
                      description: Date key name for output.
                      type: string
                    provider:
                      description: To activate the remapping, specify configuration
                        flag provider.
                      type: string
                    proxy:
                      description: Specify an HTTP Proxy.
                      type: string
                    tag_key:
                      description: The key name of tag. If include_tag_key is false,
                        This property is ignored.
                      type: string
                    tls:
                      description: TLS controls whether to use end-to-end security communications
                        security protocol. Datadog recommends setting this to on.
                      type: boolean
                  type: object
                es:
                  description: Elasticsearch defines Elasticsearch Output configuration.
                  properties:
                    awsAuth:
                      description: Enable AWS Sigv4 Authentication for Amazon ElasticSearch
                        Service.
                      type: string
                    awsExternalID:
                      description: External ID for the AWS IAM Role specified with aws_role_arn.
                      type: string
                    awsRegion:
                      description: Specify the AWS region for Amazon ElasticSearch Service.
                      type: string
                    awsRoleARN:
                      description: AWS IAM Role to assume to put records to your Amazon
                        ES cluster.
                      type: string
                    awsSTSEndpoint:
                      description: Specify the custom sts endpoint to be used with STS
                        API for Amazon ElasticSearch Service.
                      type: string
                    bufferSize:
                      description: Specify the buffer size used to read the response
                        from the Elasticsearch HTTP service. This option is useful for
                        debugging purposes where is required to read full responses,
                        note that response size grows depending of the number of records
                        inserted. To set an unlimited amount of memory set this value
                        to False, otherwise the value must be according to the Unit
                        Size specification.
                      pattern: ^\d+(k|K|KB|kb|m|M|MB|mb|g|G|GB|gb)?$
                      type: string
                    cloudAuth:
                      description: Specify the credentials to use to connect to Elastic's
                        Elasticsearch Service running on Elastic Cloud.
                      type: string
                    cloudID:
                      description: If you are using Elastic's Elasticsearch Service
                        you can specify the cloud_id of the cluster running.
                      type: string
                    currentTimeIndex:
                      description: Use current time for index generation instead of
                        message record
                      type: boolean
                    generateID:
                      description: When enabled, generate _id for outgoing records.
                        This prevents duplicate records when retrying ES.
                      type: boolean
                    host:
                      description: IP address or hostname of the target Elasticsearch
                        instance
                      type: string
                    httpPassword:
                      description: Password for user defined in HTTP_User
                      properties:
                        valueFrom:
                          description: ValueSource represents a source for the value
                            of a secret.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                          type: object
                      type: object
                    httpUser:
                      description: Optional username credential for Elastic X-Pack access
                      properties:
                        valueFrom:
                          description: ValueSource represents a source for the value
                            of a secret.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                          type: object
                      type: object
                    idKey:
                      description: If set, _id will be the value of the key from incoming
                        record and Generate_ID option is ignored.
                      type: string
                    includeTagKey:
                      description: When enabled, it append the Tag name to the record.
                      type: boolean
                    index:
                      description: Index name
                      type: string
                    logstashDateFormat:
                      description: Time format (based on strftime) to generate the second
                        part of the Index name.
                      type: string
                    logstashFormat:
                      description: 'Enable Logstash format compatibility. This option
                      takes a boolean value: True/False, On/Off'
                      type: boolean
                    logstashPrefix:
                      description: 'When Logstash_Format is enabled, the Index name
                      is composed using a prefix and the date, e.g: If Logstash_Prefix
                      is equals to ''mydata'' your index will become ''mydata-YYYY.MM.DD''.
                      The last string appended belongs to the date when the data is
                      being generated.'
                      type: string
                    logstashPrefixKey:
                      description: Prefix keys with this string
                      type: string
                    path:
                      description: Elasticsearch accepts new data on HTTP query path
                        "/_bulk". But it is also possible to serve Elasticsearch behind
                        a reverse proxy on a subpath. This option defines such path
                        on the fluent-bit side. It simply adds a path prefix in the
                        indexing HTTP POST URI.
                      type: string
                    pipeline:
                      description: Newer versions of Elasticsearch allows setting up
                        filters called pipelines. This option allows defining which
                        pipeline the database should use. For performance reasons is
                        strongly suggested parsing and filtering on Fluent Bit side,
                        avoid pipelines.
                      type: string
                    port:
                      description: TCP port of the target Elasticsearch instance
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    replaceDots:
                      description: When enabled, replace field name dots with underscore,
                        required by Elasticsearch 2.0-2.3.
                      type: boolean
                    suppressTypeName:
                      description: When enabled, mapping types is removed and Type option
                        is ignored. Types are deprecated in APIs in v7.0. This options
                        is for v7.0 or later.
                      type: string
                    tagKey:
                      description: When Include_Tag_Key is enabled, this property defines
                        the key name for the tag.
                      type: string
                    timeKey:
                      description: When Logstash_Format is enabled, each record will
                        get a new timestamp field. The Time_Key property defines the
                        name of that field.
                      type: string
                    timeKeyFormat:
                      description: When Logstash_Format is enabled, this property defines
                        the format of the timestamp.
                      type: string
                    tls:
                      description: Fluent Bit provides integrated support for Transport
                        Layer Security (TLS) and it predecessor Secure Sockets Layer
                        (SSL) respectively.
                      properties:
                        caFile:
                          description: Absolute path to CA certificate file
                          type: string
                        caPath:
                          description: Absolute path to scan for certificate files
                          type: string
                        crtFile:
                          description: Absolute path to Certificate file
                          type: string
                        debug:
                          description: 'Set TLS debug verbosity level. It accept the
                          following values: 0 (No debug), 1 (Error), 2 (State change),
                          3 (Informational) and 4 Verbose'
                          enum:
                            - 0
                            - 1
                            - 2
                            - 3
                            - 4
                          format: int32
                          type: integer
                        keyFile:
                          description: Absolute path to private Key file
                          type: string
                        keyPassword:
                          description: Optional password for tls.key_file file
                          properties:
                            valueFrom:
                              description: ValueSource represents a source for the value
                                of a secret.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                              type: object
                          type: object
                        verify:
                          description: Force certificate validation
                          type: boolean
                        vhost:
                          description: Hostname to be used for TLS SNI extension
                          type: string
                      type: object
                    traceError:
                      description: When enabled print the elasticsearch API calls to
                        stdout when elasticsearch returns an error
                      type: boolean
                    traceOutput:
                      description: When enabled print the elasticsearch API calls to
                        stdout (for diag only)
                      type: boolean
                    type:
                      description: Type name
                      type: string
                  type: object
                file:
                  description: File defines File Output configuration.
                  properties:
                    delimiter:
                      description: The character to separate each pair. Applicable only
                        if format is csv or ltsv.
                      type: string
                    file:
                      description: Set file name to store the records. If not set, the
                        file name will be the tag associated with the records.
                      type: string
                    format:
                      description: 'The format of the file content. See also Format
                      section. Default: out_file.'
                      enum:
                        - out_file
                        - plain
                        - csv
                        - ltsv
                        - template
                      type: string
                    labelDelimiter:
                      description: The character to separate each pair. Applicable only
                        if format is ltsv.
                      type: string
                    path:
                      description: Absolute directory path to store files. If not set,
                        Fluent Bit will write the files on it's own positioned directory.
                      type: string
                    template:
                      description: The format string. Applicable only if format is template.
                      type: string
                  type: object
                forward:
                  description: Forward defines Forward Output configuration.
                  properties:
                    emptySharedKey:
                      description: Use this option to connect to Fluentd with a zero-length
                        secret.
                      type: boolean
                    host:
                      description: Target host where Fluent-Bit or Fluentd are listening
                        for Forward messages.
                      type: string
                    password:
                      description: Specify the password corresponding to the username.
                      properties:
                        valueFrom:
                          description: ValueSource represents a source for the value
                            of a secret.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                          type: object
                      type: object
                    port:
                      description: TCP Port of the target service.
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    requireAckResponse:
                      description: Send "chunk"-option and wait for "ack" response from
                        server. Enables at-least-once and receiving server can control
                        rate of traffic. (Requires Fluentd v0.14.0+ server)
                      type: boolean
                    selfHostname:
                      description: Default value of the auto-generated certificate common
                        name (CN).
                      type: string
                    sendOptions:
                      description: Always send options (with "size"=count of messages)
                      type: boolean
                    sharedKey:
                      description: A key string known by the remote Fluentd used for
                        authorization.
                      type: string
                    timeAsInteger:
                      description: Set timestamps in integer format, it enable compatibility
                        mode for Fluentd v0.12 series.
                      type: boolean
                    tls:
                      description: Fluent Bit provides integrated support for Transport
                        Layer Security (TLS) and it predecessor Secure Sockets Layer
                        (SSL) respectively.
                      properties:
                        caFile:
                          description: Absolute path to CA certificate file
                          type: string
                        caPath:
                          description: Absolute path to scan for certificate files
                          type: string
                        crtFile:
                          description: Absolute path to Certificate file
                          type: string
                        debug:
                          description: 'Set TLS debug verbosity level. It accept the
                          following values: 0 (No debug), 1 (Error), 2 (State change),
                          3 (Informational) and 4 Verbose'
                          enum:
                            - 0
                            - 1
                            - 2
                            - 3
                            - 4
                          format: int32
                          type: integer
                        keyFile:
                          description: Absolute path to private Key file
                          type: string
                        keyPassword:
                          description: Optional password for tls.key_file file
                          properties:
                            valueFrom:
                              description: ValueSource represents a source for the value
                                of a secret.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                              type: object
                          type: object
                        verify:
                          description: Force certificate validation
                          type: boolean
                        vhost:
                          description: Hostname to be used for TLS SNI extension
                          type: string
                      type: object
                    username:
                      description: Specify the username to present to a Fluentd server
                        that enables user_auth.
                      properties:
                        valueFrom:
                          description: ValueSource represents a source for the value
                            of a secret.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                          type: object
                      type: object
                  type: object
                http:
                  description: HTTP defines HTTP Output configuration.
                  properties:
                    allowDuplicatedHeaders:
                      description: Specify if duplicated headers are allowed. If a duplicated
                        header is found, the latest key/value set is preserved.
                      type: boolean
                    compress:
                      description: Set payload compression mechanism. Option available
                        is 'gzip'
                      type: string
                    format:
                      description: Specify the data format to be used in the HTTP request
                        body, by default it uses msgpack. Other supported formats are
                        json, json_stream and json_lines and gelf.
                      enum:
                        - msgpack
                        - json
                        - json_stream
                        - json_lines
                        - gelf
                      type: string
                    gelfFullMessageKey:
                      description: Specify the key to use for the full message in gelf
                        format
                      type: string
                    gelfHostKey:
                      description: Specify the key to use for the host in gelf format
                      type: string
                    gelfLevelKey:
                      description: Specify the key to use for the level in gelf format
                      type: string
                    gelfShortMessgeKey:
                      description: Specify the key to use as the short message in gelf
                        format
                      type: string
                    gelfTimestampKey:
                      description: Specify the key to use for timestamp in gelf format
                      type: string
                    headerTag:
                      description: Specify an optional HTTP header field for the original
                        message tag.
                      type: string
                    headers:
                      additionalProperties:
                        type: string
                      description: Add a HTTP header key/value pair. Multiple headers
                        can be set.
                      type: object
                    host:
                      description: IP address or hostname of the target HTTP Server
                      type: string
                    httpPassword:
                      description: Basic Auth Password. Requires HTTP_User to be set
                      properties:
                        valueFrom:
                          description: ValueSource represents a source for the value
                            of a secret.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                          type: object
                      type: object
                    httpUser:
                      description: Basic Auth Username
                      properties:
                        valueFrom:
                          description: ValueSource represents a source for the value
                            of a secret.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                          type: object
                      type: object
                    jsonDateFormat:
                      description: 'Specify the format of the date. Supported formats
                      are double, epoch and iso8601 (eg: 2018-05-30T09:39:52.000681Z)'
                      type: string
                    jsonDateKey:
                      description: Specify the name of the time key in the output record.
                        To disable the time key just set the value to false.
                      type: string
                    port:
                      description: TCP port of the target HTTP Server
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    proxy:
                      description: Specify an HTTP Proxy. The expected format of this
                        value is http://host:port. Note that https is not supported
                        yet.
                      type: string
                    tls:
                      description: HTTP output plugin supports TTL/SSL, for more details
                        about the properties available and general configuration, please
                        refer to the TLS/SSL section.
                      properties:
                        caFile:
                          description: Absolute path to CA certificate file
                          type: string
                        caPath:
                          description: Absolute path to scan for certificate files
                          type: string
                        crtFile:
                          description: Absolute path to Certificate file
                          type: string
                        debug:
                          description: 'Set TLS debug verbosity level. It accept the
                          following values: 0 (No debug), 1 (Error), 2 (State change),
                          3 (Informational) and 4 Verbose'
                          enum:
                            - 0
                            - 1
                            - 2
                            - 3
                            - 4
                          format: int32
                          type: integer
                        keyFile:
                          description: Absolute path to private Key file
                          type: string
                        keyPassword:
                          description: Optional password for tls.key_file file
                          properties:
                            valueFrom:
                              description: ValueSource represents a source for the value
                                of a secret.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                              type: object
                          type: object
                        verify:
                          description: Force certificate validation
                          type: boolean
                        vhost:
                          description: Hostname to be used for TLS SNI extension
                          type: string
                      type: object
                    uri:
                      description: 'Specify an optional HTTP URI for the target web
                      server, e.g: /something'
                      type: string
                  type: object
                kafka:
                  description: Kafka defines Kafka Output configuration.
                  properties:
                    brokers:
                      description: 'Single of multiple list of Kafka Brokers, e.g: 192.168.1.3:9092,
                      192.168.1.4:9092.'
                      type: string
                    format:
                      description: 'Specify data format, options available: json, msgpack.'
                      type: string
                    messageKey:
                      description: Optional key to store the message
                      type: string
                    messageKeyField:
                      description: If set, the value of Message_Key_Field in the record
                        will indicate the message key. If not set nor found in the record,
                        Message_Key will be used (if set).
                      type: string
                    rdkafka:
                      additionalProperties:
                        type: string
                      description: '{property} can be any librdkafka properties'
                      type: object
                    timestampFormat:
                      description: iso8601 or double
                      type: string
                    timestampKey:
                      description: Set the key to store the record timestamp
                      type: string
                    topicKey:
                      description: 'If multiple Topics exists, the value of Topic_Key
                      in the record will indicate the topic to use. E.g: if Topic_Key
                      is router and the record is {"key1": 123, "router": "route_2"},
                      Fluent Bit will use topic route_2. Note that if the value of
                      Topic_Key is not present in Topics, then by default the first
                      topic in the Topics list will indicate the topic to be used.'
                      type: string
                    topics:
                      description: Single entry or list of topics separated by comma
                        (,) that Fluent Bit will use to send messages to Kafka. If only
                        one topic is set, that one will be used for all records. Instead
                        if multiple topics exists, the one set in the record by Topic_Key
                        will be used.
                      type: string
                  type: object
                loki:
                  description: Loki defines Loki Output configuration.
                  properties:
                    autoKubernetesLabels:
                      description: If set to true, it will add all Kubernetes labels
                        to the Stream labels.
                      enum:
                        - "on"
                        - "off"
                      type: string
                    host:
                      description: Loki hostname or IP address.
                      type: string
                    httpPassword:
                      description: Password for user defined in HTTP_User Set HTTP basic
                        authentication password
                      properties:
                        valueFrom:
                          description: ValueSource represents a source for the value
                            of a secret.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                          type: object
                      type: object
                    httpUser:
                      description: Set HTTP basic authentication user name.
                      properties:
                        valueFrom:
                          description: ValueSource represents a source for the value
                            of a secret.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                          type: object
                      type: object
                    labelKeys:
                      description: Optional list of record keys that will be placed
                        as stream labels. This configuration property is for records
                        key only.
                      items:
                        type: string
                      type: array
                    labels:
                      description: Stream labels for API request. It can be multiple
                        comma separated of strings specifying  key=value pairs. In addition
                        to fixed parameters, it also allows to add custom record keys
                        (similar to label_keys property).
                      items:
                        type: string
                      type: array
                    lineFormat:
                      description: Format to use when flattening the record to a log
                        line. Valid values are json or key_value. If set to json,  the
                        log line sent to Loki will be the Fluent Bit record dumped as
                        JSON. If set to key_value, the log line will be each item in
                        the record concatenated together (separated by a single space)
                        in the format.
                      enum:
                        - json
                        - key_value
                      type: string
                    port:
                      description: Loki TCP port
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    tenantID:
                      description: Tenant ID used by default to push logs to Loki. If
                        omitted or empty it assumes Loki is running in single-tenant
                        mode and no X-Scope-OrgID header is sent.
                      properties:
                        valueFrom:
                          description: ValueSource represents a source for the value
                            of a secret.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                          type: object
                      type: object
                    tls:
                      description: Fluent Bit provides integrated support for Transport
                        Layer Security (TLS) and it predecessor Secure Sockets Layer
                        (SSL) respectively.
                      properties:
                        caFile:
                          description: Absolute path to CA certificate file
                          type: string
                        caPath:
                          description: Absolute path to scan for certificate files
                          type: string
                        crtFile:
                          description: Absolute path to Certificate file
                          type: string
                        debug:
                          description: 'Set TLS debug verbosity level. It accept the
                          following values: 0 (No debug), 1 (Error), 2 (State change),
                          3 (Informational) and 4 Verbose'
                          enum:
                            - 0
                            - 1
                            - 2
                            - 3
                            - 4
                          format: int32
                          type: integer
                        keyFile:
                          description: Absolute path to private Key file
                          type: string
                        keyPassword:
                          description: Optional password for tls.key_file file
                          properties:
                            valueFrom:
                              description: ValueSource represents a source for the value
                                of a secret.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                              type: object
                          type: object
                        verify:
                          description: Force certificate validation
                          type: boolean
                        vhost:
                          description: Hostname to be used for TLS SNI extension
                          type: string
                      type: object
                  required:
                    - host
                  type: object
                match:
                  description: A pattern to match against the tags of incoming records.
                    It's case sensitive and support the star (*) character as a wildcard.
                  type: string
                matchRegex:
                  description: A regular expression to match against the tags of incoming
                    records. Use this option if you want to use the full regex syntax.
                  type: string
                "null":
                  description: Null defines Null Output configuration.
                  type: object
                retry_limit:
                  description: RetryLimit represents configuration for the scheduler
                    which can be set independently on each clusteroutput section. This
                    option allows to disable retries or impose a limit to try N times
                    and then discard the data after reaching that limit.
                  type: string
                stdout:
                  description: Stdout defines Stdout Output configuration.
                  properties:
                    format:
                      description: Specify the data format to be printed. Supported
                        formats are msgpack json, json_lines and json_stream.
                      enum:
                        - msgpack
                        - json
                        - json_lines
                        - json_stream
                      type: string
                    jsonDateFormat:
                      description: 'Specify the format of the date. Supported formats
                      are double,  iso8601 (eg: 2018-05-30T09:39:52.000681Z) and epoch.'
                      enum:
                        - double
                        - iso8601
                        - epoch
                      type: string
                    jsonDateKey:
                      description: Specify the name of the date field in output.
                      type: string
                  type: object
                syslog:
                  description: Syslog defines Syslog Output configuration.
                  properties:
                    host:
                      description: Host domain or IP address of the remote Syslog server.
                      type: string
                    mode:
                      description: Mode of the desired transport type, the available
                        options are tcp, tls and udp.
                      type: string
                    port:
                      description: TCP or UDP port of the remote Syslog server.
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    syslogAppnameKey:
                      description: Key name from the original record that contains the
                        application name that generated the message.
                      type: string
                    syslogFacilityKey:
                      description: Key from the original record that contains the Syslog
                        facility number.
                      type: string
                    syslogFormat:
                      description: Syslog protocol format to use, the available options
                        are rfc3164 and rfc5424.
                      type: string
                    syslogHostnameKey:
                      description: Key name from the original record that contains the
                        hostname that generated the message.
                      type: string
                    syslogMaxSize:
                      description: Maximum size allowed per message, in bytes.
                      format: int32
                      type: integer
                    syslogMessageIDKey:
                      description: Key name from the original record that contains the
                        Message ID associated to the message.
                      type: string
                    syslogMessageKey:
                      description: Key key name that contains the message to deliver.
                      type: string
                    syslogProcessIDKey:
                      description: Key name from the original record that contains the
                        Process ID that generated the message.
                      type: string
                    syslogSDKey:
                      description: Key name from the original record that contains the
                        Structured Data (SD) content.
                      type: string
                    syslogSeverityKey:
                      description: Key from the original record that contains the Syslog
                        severity number.
                      type: string
                    tls:
                      description: Syslog output plugin supports TTL/SSL, for more details
                        about the properties available and general configuration, please
                        refer to the TLS/SSL section.
                      properties:
                        caFile:
                          description: Absolute path to CA certificate file
                          type: string
                        caPath:
                          description: Absolute path to scan for certificate files
                          type: string
                        crtFile:
                          description: Absolute path to Certificate file
                          type: string
                        debug:
                          description: 'Set TLS debug verbosity level. It accept the
                          following values: 0 (No debug), 1 (Error), 2 (State change),
                          3 (Informational) and 4 Verbose'
                          enum:
                            - 0
                            - 1
                            - 2
                            - 3
                            - 4
                          format: int32
                          type: integer
                        keyFile:
                          description: Absolute path to private Key file
                          type: string
                        keyPassword:
                          description: Optional password for tls.key_file file
                          properties:
                            valueFrom:
                              description: ValueSource represents a source for the value
                                of a secret.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                              type: object
                          type: object
                        verify:
                          description: Force certificate validation
                          type: boolean
                        vhost:
                          description: Hostname to be used for TLS SNI extension
                          type: string
                      type: object
                  type: object
                tcp:
                  description: TCP defines TCP Output configuration.
                  properties:
                    format:
                      description: Specify the data format to be printed. Supported
                        formats are msgpack json, json_lines and json_stream.
                      enum:
                        - msgpack
                        - json
                        - json_lines
                        - json_stream
                      type: string
                    host:
                      description: Target host where Fluent-Bit or Fluentd are listening
                        for Forward messages.
                      type: string
                    jsonDateFormat:
                      description: 'Specify the format of the date. Supported formats
                      are double, epoch and iso8601 (eg: 2018-05-30T09:39:52.000681Z)'
                      enum:
                        - double
                        - epoch
                        - iso8601
                      type: string
                    jsonDateKey:
                      description: TSpecify the name of the time key in the output record.
                        To disable the time key just set the value to false.
                      type: string
                    port:
                      description: TCP Port of the target service.
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    tls:
                      description: Fluent Bit provides integrated support for Transport
                        Layer Security (TLS) and it predecessor Secure Sockets Layer
                        (SSL) respectively.
                      properties:
                        caFile:
                          description: Absolute path to CA certificate file
                          type: string
                        caPath:
                          description: Absolute path to scan for certificate files
                          type: string
                        crtFile:
                          description: Absolute path to Certificate file
                          type: string
                        debug:
                          description: 'Set TLS debug verbosity level. It accept the
                          following values: 0 (No debug), 1 (Error), 2 (State change),
                          3 (Informational) and 4 Verbose'
                          enum:
                            - 0
                            - 1
                            - 2
                            - 3
                            - 4
                          format: int32
                          type: integer
                        keyFile:
                          description: Absolute path to private Key file
                          type: string
                        keyPassword:
                          description: Optional password for tls.key_file file
                          properties:
                            valueFrom:
                              description: ValueSource represents a source for the value
                                of a secret.
                              properties:
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                              type: object
                          type: object
                        verify:
                          description: Force certificate validation
                          type: boolean
                        vhost:
                          description: Hostname to be used for TLS SNI extension
                          type: string
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
