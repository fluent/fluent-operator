# Fluentd watcher agent
FROM golang:1.20.4-alpine3.16 as buildergo
RUN mkdir -p /fluentd
RUN mkdir -p /code
COPY . /code/
WORKDIR /code
RUN echo $(ls -al /code)
RUN CGO_ENABLED=0 go build -ldflags '-w -s' -o /fluentd/fluentd-watcher /code/cmd/fluent-watcher/fluentd/main.go

# Fluentd main image
FROM kubesphere/fluentd:v1.15.3-arm64-base
LABEL Description="Fluentd docker image" Vendor="Fluent Organization" Version="1.15.3"
ENV TINI_VERSION=0.18.0

# Do not split this into multiple RUN!
# Docker creates a layer for every RUN-Statement
# therefore an 'apt-get purge' has no effect
RUN buildDeps=" \
      make gcc g++ libc-dev \
      wget bzip2 gnupg dirmngr\
    " \
 && gem install fluentd -v 1.15.3 \
 && apt-get purge -y --auto-remove \
                  -o APT::AutoRemove::RecommendsImportant=false \
                  $buildDeps \
 && rm -rf /var/lib/apt/lists/* \
 && rm -rf /tmp/* /var/tmp/* /usr/lib/ruby/gems/*/cache/*.gem /usr/lib/ruby/gems/2.*/gems/fluentd-*/test

RUN groupadd -r fluent && useradd -r -g fluent fluent \
    # for log storage (maybe shared with host)
    && mkdir -p /fluentd/log \
    # configuration/plugins path (default: copied from .)
    && mkdir -p /fluentd/etc /fluentd/plugins \
    && chown -R fluent /fluentd && chgrp -R fluent /fluentd

ENV FLUENTD_CONF="fluent.conf"

ENV LD_PRELOAD="/usr/lib/libjemalloc.so.2"
EXPOSE 24224 5140

USER fluent

COPY ./cmd/fluent-watcher/fluentd/base/fluent.conf /fluentd/etc/
COPY ./cmd/fluent-watcher/fluentd/app/app.conf /fluentd/etc/

# copy the output in buildergo
COPY --from=buildergo /fluentd/fluentd-watcher /fluentd/bin/fluentd-watcher
# Entry point
ENTRYPOINT ["/fluentd/bin/fluentd-watcher"]