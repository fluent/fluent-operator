# Fluentd watcher agent
FROM golang:1.23.4-alpine3.19 as buildergo
RUN mkdir -p /fluentd
RUN mkdir -p /code
COPY . /code/
WORKDIR /code
RUN echo $(ls -al /code)
RUN CGO_ENABLED=0 go build -ldflags '-w -s' -o /fluentd/fluentd-watcher /code/cmd/fluent-watcher/fluentd/main.go

FROM --platform=linux/arm64 arm64v8/ruby:3.4-slim-bookworm
COPY --from=builder /go/qemu-aarch64-static /usr/bin/
LABEL maintainer "Fluentd developers <fluentd@googlegroups.com>"
LABEL Description="Fluentd docker image" Vendor="Fluent Organization" Version="1.17.1"
ARG CROSS_BUILD_START="cross-build-start"
ARG CROSS_BUILD_END="cross-build-end"
RUN [ ${CROSS_BUILD_START} ]

# Do not split this into multiple RUN!
# Docker creates a layer for every RUN-Statement
# therefore an 'apt-get purge' has no effect
RUN apt-get update \
 && apt-get install -y --no-install-recommends \
            ca-certificates tini \
 && buildDeps=" \
      make gcc g++ libc-dev \
      wget bzip2 gnupg dirmngr \
    " \
 && apt-get install -y --no-install-recommends $buildDeps \
 && echo 'gem: --no-document' >> /etc/gemrc \
 && gem install oj -v 3.16.5 \
 && gem install json -v 2.7.4 \
 && gem install rexml -v 3.3.9 \
 && gem install async -v 1.32.1 \
 && gem install async-http -v 0.64.2 \
 && gem install fluentd -v 1.17.1 \
 && gem install resolv -v 0.2.1 \
 && gem install elasticsearch -v 7.13.3 \
 && gem install elasticsearch-xpack -v 7.13.3 \
 && gem install fluent-plugin-detect-exceptions -v 0.0.16 \
 && gem install rdkafka -v 0.19.0 \
 && gem install \
         fluent-plugin-s3 \
         fluent-plugin-grok-parser \
         fluent-plugin-rewrite-tag-filter \
         fluent-plugin-oss \
         fluent-plugin-dedot_filter \
         fluent-plugin-sumologic_output \
         fluent-plugin-kafka \
         fluent-plugin-label-router \
         fluent-plugin-record-modifier \
         fluent-plugin-multi-format-parser \
         fluent-plugin-aws-elasticsearch-service \
         fluent-plugin-opensearch \
         fluent-plugin-datadog \
         fluent-plugin-prometheus \ 
 && export GEM_DIR=$(ruby -e 'puts Gem.dir') \
 && echo GEM_DIR=$GEM_DIR \
 && rm -rf $GEM_DIR/cache/*.gem \
 # Don't purge $GEM_DIR/gems/GEM/lib/GEM/ext because it might contain runtime .so (e.g json)
 && find $GEM_DIR -maxdepth 3 -type d -name test -or -name ext -or -name spec -or -name benchmark | xargs -r rm -rfv \
 && find $GEM_DIR -name "*.so" | xargs -r strip \
 && dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')" \
 && wget -O /tmp/jemalloc-5.3.0.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/5.3.0/jemalloc-5.3.0.tar.bz2 \
 && cd /tmp && tar -xjf jemalloc-5.3.0.tar.bz2 --no-same-owner && cd jemalloc-5.3.0/ \
 # Don't use MADV_FREE to reduce memory usage and improve stability
 # https://github.com/fluent/fluentd-docker-image/pull/350
 && (echo "je_cv_madv_free=no" > config.cache) && ./configure -C && make \
 && mv lib/libjemalloc.so.2 /usr/lib \
 && apt-get purge -y --auto-remove \
                  -o APT::AutoRemove::RecommendsImportant=false \
                  $buildDeps \
                  '*-dev' \
 && rm -rf /var/lib/apt/lists/* \
 && rm -rf /tmp/* /var/tmp/*

RUN groupadd -r fluent && useradd -r -g fluent fluent \
    # for log storage (maybe shared with host)
    && mkdir -p /fluentd/log \
    # configuration/plugins path (default: copied from .)
    && mkdir -p /fluentd/etc /fluentd/plugins \
    && chown -R fluent /fluentd && chgrp -R fluent /fluentd

ENV FLUENTD_CONF="fluent.conf"

ENV LD_PRELOAD="/usr/lib/libjemalloc.so.2"
EXPOSE 24224 5140

USER fluent

COPY ./cmd/fluent-watcher/fluentd/base/fluent.conf /fluentd/etc/
COPY ./cmd/fluent-watcher/fluentd/app/app.conf /fluentd/etc/

# copy the output in buildergo
COPY --from=buildergo /fluentd/fluentd-watcher /fluentd/bin/fluentd-watcher
# Entry point
ENTRYPOINT ["/fluentd/bin/fluentd-watcher"]
